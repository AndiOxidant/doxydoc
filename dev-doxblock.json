[
    {
        "file": "test/src/banana.js",
        "data": [
            {
                "tags": [
                    {
                        "type": "module",
                        "string": "banana"
                    }
                ],
                "description": {
                    "full": "<p>Banana test module </p>",
                    "summary": "<p>Banana test module </p>",
                    "body": ""
                },
                "isPrivate": false,
                "isConstructor": false,
                "isEvent": false,
                "ignore": false,
                "line": 1,
                "codeStart": 5,
                "code": "module.exports = function() {\n    'use strict';",
                "ctx": {
                    "type": "method",
                    "receiver": "module",
                    "name": "exports",
                    "string": "module.exports()"
                }
            },
            {
                "tags": [
                    {
                        "type": "const",
                        "string": "{string}"
                    }
                ],
                "description": {
                    "full": "<p>Test constant</p>",
                    "summary": "<p>Test constant</p>",
                    "body": ""
                },
                "isPrivate": false,
                "isConstructor": false,
                "isEvent": false,
                "ignore": false,
                "line": 8,
                "codeStart": 12,
                "code": "var NAME = 'banana';",
                "ctx": {
                    "type": "declaration",
                    "name": "NAME",
                    "value": "'banana'",
                    "string": "NAME"
                }
            },
            {
                "tags": [
                    {
                        "type": "constructor",
                        "string": ""
                    }
                ],
                "description": {
                    "full": "<p>Banana constructor</p>",
                    "summary": "<p>Banana constructor</p>",
                    "body": ""
                },
                "isPrivate": false,
                "isConstructor": true,
                "isEvent": false,
                "ignore": false,
                "line": 14,
                "codeStart": 18,
                "code": "var Banana = function() {\n\n};",
                "ctx": {
                    "type": "constructor",
                    "name": "Banana",
                    "string": "Banana()"
                }
            },
            {
                "tags": [
                    {
                        "type": "return",
                        "types": [
                            "string"
                        ],
                        "typesDescription": "<code>string</code>",
                        "optional": false,
                        "nullable": false,
                        "nonNullable": false,
                        "variable": false,
                        "description": "<p>Returns how bananas tastes</p>"
                    }
                ],
                "description": {
                    "full": "<p>Tastes method of Banana</p>",
                    "summary": "<p>Tastes method of Banana</p>",
                    "body": ""
                },
                "isPrivate": false,
                "isConstructor": false,
                "isEvent": false,
                "ignore": false,
                "line": 22,
                "codeStart": 27,
                "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
                "ctx": {
                    "type": "method",
                    "constructor": "Banana",
                    "cons": "Banana",
                    "name": "tastes",
                    "string": "Banana.prototype.tastes()"
                }
            },
            {
                "tags": [
                    {
                        "type": "private",
                        "visibility": "private"
                    },
                    {
                        "type": "param",
                        "name": "isGreen",
                        "description": "<p>Returns true if banana is green</p>",
                        "types": [
                            "boolen"
                        ],
                        "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                        "optional": false,
                        "nullable": false,
                        "nonNullable": false,
                        "variable": false
                    }
                ],
                "description": {
                    "full": "<p>Private method</p>",
                    "summary": "<p>Private method</p>",
                    "body": ""
                },
                "isPrivate": true,
                "isConstructor": false,
                "isEvent": false,
                "ignore": false,
                "line": 31,
                "codeStart": 37,
                "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
                "ctx": {
                    "type": "method",
                    "constructor": "Banana",
                    "cons": "Banana",
                    "name": "isGreen",
                    "string": "Banana.prototype.isGreen()"
                }
            }
        ]
    }
]{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 26,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 30,
    "codeStart": 36,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

{
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

{
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

{
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

{
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

{
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    }
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    }
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {}
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    }
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module </p>",
        "summary": "<p>Banana test module </p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana"
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 12,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 27,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 31,
    "codeStart": 37,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            "    var banana = require('banana');"
        ]
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            "    var banana = require('banana');"
        ]
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "Require example     var banana = require('banana');"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "title": "",
                "code": "Require example     var banana = require('banana');"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "Require example     var banana = require('banana');"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "title": "",
                "code": "Require example     var banana = require('banana');"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "Require example     var banana = require('banana');"
        }
    ],
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "title": "",
                "code": "Require example     var banana = require('banana');"
            }
        ]
    },
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "Returns how bananas tastes"
        }
    ],
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "Returns true if banana is green",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "Returns true if banana is green",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "Require example     var banana = require('banana');"
        }
    ],
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "title": "",
                "code": "Require example     var banana = require('banana');"
            }
        ]
    },
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "Returns how bananas tastes"
        }
    ],
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "Returns true if banana is green",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "Returns true if banana is green",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "Require example     var banana = require('banana');"
        }
    ],
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "title": "",
                "code": "Require example     var banana = require('banana');"
            }
        ]
    },
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "Returns how bananas tastes"
        }
    ],
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "Returns true if banana is green",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "Returns true if banana is green",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "Require example     var banana = require('banana');"
        }
    ],
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "title": "",
                "code": "Require example     var banana = require('banana');"
            }
        ]
    },
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "Returns how bananas tastes"
        }
    ],
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "Returns true if banana is green",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "Returns true if banana is green",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');"
        }
    ],
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "title": "",
                "code": "    var banana = require('banana');"
            }
        ]
    },
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "Returns how bananas tastes"
        }
    ],
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "Returns true if banana is green",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "Returns true if banana is green",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');"
        }
    ],
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "title": "",
                "code": "    var banana = require('banana');"
            }
        ]
    },
    "description": {
        "full": "Banana test module",
        "summary": "Banana test module",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "Test constant",
        "summary": "Test constant",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "Banana constructor",
        "summary": "Banana constructor",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "Returns how bananas tastes"
        }
    ],
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "Tastes method of Banana\n",
        "summary": "Tastes method of Banana\n",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "Returns true if banana is green",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "Returns true if banana is green",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "Private method\n",
        "summary": "Private method\n",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "title": "",
                "code": "    var banana = require('banana');"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 7,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 10,
    "codeStart": 14,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 16,
    "codeStart": 20,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 24,
    "codeStart": 29,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 33,
    "codeStart": 39,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 8,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 8,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 11,
    "codeStart": 15,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 11,
    "codeStart": 15,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 17,
    "codeStart": 21,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 17,
    "codeStart": 21,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 25,
    "codeStart": 30,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 25,
    "codeStart": 30,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 34,
    "codeStart": 40,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 34,
    "codeStart": 40,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "Banana example     var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 8,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "Banana example     var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 8,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 11,
    "codeStart": 15,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 11,
    "codeStart": 15,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 17,
    "codeStart": 21,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 17,
    "codeStart": 21,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 25,
    "codeStart": 30,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 25,
    "codeStart": 30,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 34,
    "codeStart": 40,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 34,
    "codeStart": 40,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 8,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p>",
        "summary": "<p>Banana test module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 8,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 11,
    "codeStart": 15,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 11,
    "codeStart": 15,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 17,
    "codeStart": 21,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 17,
    "codeStart": 21,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 25,
    "codeStart": 30,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 25,
    "codeStart": 30,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 34,
    "codeStart": 40,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 34,
    "codeStart": 40,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ]
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ]
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 4,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 7,
    "codeStart": 12,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 17,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 21,
    "codeStart": 27,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "banana"
        },
        {
            "type": "example",
            "string": "    var banana = require('banana');\n    banana.peelIt();"
        }
    ],
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "banana",
        "example": [
            {
                "code": "    var banana = require('banana');\n    banana.peelIt();"
            }
        ],
        "method": "exports"
    },
    "description": {
        "full": "<p>Banana test module</p><p>Very awesome banana module.</p>",
        "summary": "<p>Banana test module</p>",
        "body": "<p>Very awesome banana module.</p>"
    },
    "line": 1,
    "codeStart": 11,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "const",
            "string": "{string}"
        }
    ],
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';",
    "ctx": {
        "type": "declaration",
        "name": "NAME",
        "value": "'banana'",
        "string": "NAME"
    }
}

Mapped to: {
    "tags": {
        "const": "{string}"
    },
    "description": {
        "full": "<p>Test constant</p>",
        "summary": "<p>Test constant</p>",
        "body": ""
    },
    "line": 14,
    "codeStart": 18,
    "code": "var NAME = 'banana';"
}

Doxed block: {
    "tags": [
        {
            "type": "constructor",
            "string": ""
        }
    ],
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": true,
    "isEvent": false,
    "ignore": false,
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};",
    "ctx": {
        "type": "constructor",
        "name": "Banana",
        "string": "Banana()"
    }
}

Mapped to: {
    "tags": {
        "constructor": true
    },
    "description": {
        "full": "<p>Banana constructor</p>",
        "summary": "<p>Banana constructor</p>",
        "body": ""
    },
    "line": 20,
    "codeStart": 24,
    "code": "var Banana = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "return",
            "types": [
                "string"
            ],
            "typesDescription": "<code>string</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Returns how bananas tastes</p>"
        }
    ],
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "tastes",
        "string": "Banana.prototype.tastes()"
    }
}

Mapped to: {
    "tags": {
        "method": "tastes"
    },
    "description": {
        "full": "<p>Tastes method of Banana</p>",
        "summary": "<p>Tastes method of Banana</p>",
        "body": ""
    },
    "line": 28,
    "codeStart": 33,
    "code": "Banana.prototype.tastes = function() {\n    return 'awesome';\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "private",
            "visibility": "private"
        },
        {
            "type": "param",
            "name": "isGreen",
            "description": "<p>Returns true if banana is green</p>",
            "types": [
                "boolen"
            ],
            "typesDescription": "<a href=\"boolen.html\">boolen</a>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        }
    ],
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "isPrivate": true,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};",
    "ctx": {
        "type": "method",
        "constructor": "Banana",
        "cons": "Banana",
        "name": "isGreen",
        "string": "Banana.prototype.isGreen()"
    }
}

Mapped to: {
    "tags": {
        "params": [
            {
                "type": "boolen",
                "name": "isGreen",
                "description": "<p>Returns true if banana is green</p>",
                "types": [
                    "boolen"
                ],
                "typesDescription": "<a href=\"boolen.html\">boolen</a>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "method": "isGreen"
    },
    "description": {
        "full": "<p>Private method</p>",
        "summary": "<p>Private method</p>",
        "body": ""
    },
    "line": 37,
    "codeStart": 43,
    "code": "Banana.prototype.isGreen = function(green) {\n    \n};\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "module",
            "string": "Pineapple"
        }
    ],
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';",
    "ctx": {
        "type": "method",
        "receiver": "module",
        "name": "exports",
        "string": "module.exports()"
    }
}

Mapped to: {
    "tags": {
        "module": "Pineapple",
        "method": "exports"
    },
    "description": {
        "full": "<p>Pineapple module</p>",
        "summary": "<p>Pineapple module</p>",
        "body": ""
    },
    "line": 1,
    "codeStart": 5,
    "code": "module.exports = function() {\n    'use strict';"
}

Doxed block: {
    "tags": [
        {
            "type": "type",
            "types": [
                "String"
            ],
            "typesDescription": "<code>String</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false
        },
        {
            "type": "group",
            "string": "Pineapple2"
        }
    ],
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';",
    "ctx": {
        "type": "declaration",
        "name": "taste",
        "value": "'sweet'",
        "string": "taste"
    }
}

Mapped to: {
    "tags": {
        "types": [
            {
                "type": "type",
                "types": [
                    "String"
                ],
                "typesDescription": "<code>String</code>",
                "optional": false,
                "nullable": false,
                "nonNullable": false,
                "variable": false
            }
        ],
        "type": "String",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Taste variable</p>",
        "summary": "<p>Taste variable</p>",
        "body": ""
    },
    "line": 8,
    "codeStart": 13,
    "code": "var taste = 'sweet';"
}

Doxed block: {
    "tags": [],
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};",
    "ctx": {
        "type": "function",
        "name": "eat",
        "string": "eat()"
    }
}

Mapped to: {
    "tags": {},
    "description": {
        "full": "<p>Eat method</p>",
        "summary": "<p>Eat method</p>",
        "body": ""
    },
    "line": 15,
    "codeStart": 18,
    "code": "var eat = function() {\n\n};"
}

Doxed block: {
    "tags": [
        {
            "type": "method",
            "string": "peal"
        },
        {
            "type": "group",
            "string": "Pineapple2"
        },
        {
            "type": "return",
            "types": [
                "boolean"
            ],
            "typesDescription": "<code>boolean</code>",
            "optional": false,
            "nullable": false,
            "nonNullable": false,
            "variable": false,
            "description": "<p>Is peeled</p>"
        }
    ],
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};",
    "ctx": {
        "type": "function",
        "name": "peal",
        "string": "peal()"
    }
}

Mapped to: {
    "tags": {
        "method": "peal",
        "group": "Pineapple2"
    },
    "description": {
        "full": "<p>Peal method</p>",
        "summary": "<p>Peal method</p>",
        "body": ""
    },
    "line": 22,
    "codeStart": 28,
    "code": "var peal = function() {\n\n};\n\n};"
}

