/**
 * @var {Boolean} textareaResize Allow resizing of textarea fields
 * @group config
 */
/**
 * A collection of beautiful predefined colors
 * @module colors
 */
/**
 * Color ocean blue
 * @var {color}
 */
/**
 * Color lagoon blue
 * @var {color}
 */
/**
 * Color dark lagoon blue
 * @var {color}
 */
/**
 * Color deep blue
 * @var {color}
 */
/**
 * Color purplePlum
 * @var {color}
 */
/**
 * Color purpleStone
 * @var {color}
 */
/**
 * Color blackBerry
 * @var {color}
 */
/**
 * Color fire red
 * @var {color}
 */
/**
 * Color bloody red
 * @var  {color}
 */
/**
 * Color pretty sunrise
 * @var  {color}
 */
/**
 * Color green bird
 * @var {color}
 */
/**
 * Color green grass
 * @var {color}
 */
/**
 * Color yellow glow
 * @var {color}
 */
/**
 * Color yellow snow
 * @var {color}
 */
/**
 * Color shark grey
 * @var {color}
 */
/**
 * Color shark grey
 * @var {color}
 */
/**
 * Color shark grey
 * @var {color}
 */
/**
 * Color night grey
 * @var {color}
 */
/**
 * Color dessert sand
 * @var {color}
 */
/**
 * Color brown bear
 * @var {color}
 */
.overflowEllipsis {
  white-space: pre;
  text-overflow: ellipsis;
  overflow: hidden;
}
.hidden {
  display: none;
}
/**
 * Resets predefined css properties of common html tags
 * 
 * @module reset
 */
html {
  width: 100%;
  height: 100%;
}
body {
  width: 100%;
  height: 100%;
  font-size: 13px;
  font-family: sans-serif;
  margin: 0;
}
/**
 * dcForms module
 * This module must be activated in *less mode* by adding `.dcForms();` to your main.less file.
 * @module dcForms
 */
/**
 * The dcButton module styles different buttons.
 * This module must be activated in *less mode* by adding `.dcButtons();` to your main.less file.
 * 
 * @module dcButtons
 */
/**
 * dcLabels module
 * This module must be activated in *less mode* by adding `.dcLabels();` to your main.less file.
 * @module dcLabels
 */
/**
 * dcTable module
 * This module must be activated in *less mode* by adding `.dcTables();` to your main.less file.
 * @module dcTables
 */
/**
 * dcListing module
 * This module must be activated in *less mode* by adding `.dcListing();` to your main.less file.
 * @module dcListing
 */
/**
 * dcFlipBox module
 * This module must be activated in *less mode* by adding `.dcFlipBox();` to your main.less file.
 * @module dcFlipBox
 */
/**
 * Button
 *
 * html:
 * 
 * <button type="button" class="button">
 *   <span class="icon icon-code"></span>
 *   <span class="text">MyButton</span>
 * </button>
 */
.button {
  display: inline-block;
  background-color: #ececec;
  border-radius: 5px;
  border: 1px solid #ccc;
  padding: 0;
  box-sizing: border-box;
  transition: border-color 300ms;
  outline: none;
}
.button .text {
  padding: 0 5px;
  color: #1854b1;
  vertical-align: middle;
  line-height: 24px;
  font-size: 14px;
}
.button .icon {
  vertical-align: middle;
}
.button:hover {
  border: 1px solid #1854b1;
}
.button::-moz-focus-inner {
  border: none;
}
.button:focus {
  outline: none;
}
/**
 * Icon
 *
 * html:
 *
 * <any class="icon icon-code" />
 */
.icon {
  background-image: url('templates/deep-space/less/dresscode/sprite-48.png');
  background-size: 24px 48px;
  background-repeat: no-repeat;
  width: 24px;
  height: 24px;
  display: inline-block;
}
/**
     * Reset h1 - h6 tags
     * 
     * @action headlines
     */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 12px;
  font-weight: normal;
  margin: 0;
}
/**
     * Reset ul and li tags
     * 
     * @action lists
     */
ul,
li {
  margin: 0;
  padding: 0;
  list-style-type: none;
}
p {
  margin: 0;
}
/**
     * Styles a label
     * 
     * @mixin label
     *
     * @example {html}
     * <span class="label labelRed">Button</span>
     * 
     * @preview
     * <span class="label labelRed">Button</span>
     */
.label {
  display: inline-block;
  border-radius: 5px;
  color: #fff;
  padding: 2px 5px;
  font-size: 12px;
  font-weight: normal;
  vertical-align: middle;
}
.labelRed {
  background-color: #b10000;
}
.labelDarkRed {
  background-color: #b10024;
}
.labelBlue {
  background-color: #0051cd;
}
.labelPurple {
  background-color: #7a00ad;
}
.lableDarkPurple {
  background-color: #430069;
}
.labelGrey {
  background-color: #555555;
}
.labelOrangeRed {
  background-color: #ff7e00;
}
.labelBrown {
  background-color: #967657;
}
.labelDarkGreen {
  background-color: #00826a;
}
.labelGreen {
  background-color: #008b12;
}
.labelYellow {
  background-color: #e1ff00;
  color: #000;
}
.labelBlack {
  background-color: #000;
  color: #fff;
}
.labelGrey {
  background-color: #232323;
  color: #fff;
}
dl {
  margin: 5px 0 5px 0;
}
dt {
  font-size: 11px;
  color: #555555;
  margin-bottom: 2px;
}
dd {
  margin-left: 0;
}
/**
     * Styles generic form elements
     *
     * @mixin form elements
     */
textarea,
input[type=text],
input[type=password] {
  border: 1px solid #555555;
  padding: 1px;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border-radius: 3px;
  height: 28px;
  font-size: 17px;
}
input[type=text].error,
input[type=password].error,
textarea.error {
  border-color: #b10000;
  border-width: 2px;
}
textarea {
  height: 100px;
  resize: none;
}
div[data-xqform=input-suggest] input[type=text] {
  border: none;
}
/**
     * Styles a switch
     *
     * @mixin dcSwitch
     *
     * @example {html}
     * <div class="dcSwitch">
     *     <input type="radio" name="myswitch" value="on" id="switch1" checked="checked"><label
     *      for="switch1">On</label><input
     *      type="radio" name="myswitch" value="off" id="switch2"><label
     *      for="switch2">Off</label>
     * </div>
     *
     * @preview {html}
     * <div class="dcSwitch">
     *     <input type="radio" name="myswitch" value="on" id="switch1" checked="checked"><label
     *      for="switch1">On</label><input
     *      type="radio" name="myswitch" value="off" id="switch2"><label
     *      for="switch2">Off</label>
     * </div>
     */
.dcSwitch {
  position: relative;
  overflow: hidden;
  display: inline-block;
  border: 1px solid #000;
  border-radius: 3px;
  line-height: 20px;
  vertical-align: middle;
  background-color: #d5d5d5;
}
.dcSwitch input[type=radio] {
  position: absolute;
  left: -100px;
  top: -100px;
}
.dcSwitch input[type=radio] + label {
  display: inline-block;
  background-color: #d5d5d5;
  color: #333;
  padding: 2px 5px;
  border-right: 1px solid #000;
}
.dcSwitch input[type=radio] + label:last-child {
  border-right: 0;
}
.dcSwitch input[type=radio]:checked + label {
  background-color: #0051cd;
  color: #fff;
}
/**
     * Styles a checkbox
     *
     * @mixin dcCheck
     *
     * @example {html}
     * <div class="dcCheck">
     *     <input type="checkbox" name="mycheckbox" value="on" id="check1" checked="checked">
     *     <label for="check1">Mi checkbox</label>
     * </div>
     *
     * @preview {html}
     * <div class="dcCheck">
     *     <input type="checkbox" name="mycheckbox" value="on" id="check1" checked="checked">
     *     <label for="check1">Mi checkbox</label>
     * </div>
     */
.dcCheck {
  position: relative;
  overflow: hidden;
}
.dcCheck input[type=checkbox] {
  position: absolute;
  left: -100px;
  top: -100px;
}
.dcCheck input[type=checkbox] + label:before {
  content: '✔';
  text-align: center;
  color: #c0c0c0;
  border: 2px solid #c0c0c0;
  border-radius: 100%;
  width: 15px;
  height: 15px;
  display: inline-block;
  margin-right: 5px;
  vertical-align: bottom;
  background-color: #ddd;
}
.dcCheck input[type=checkbox]:checked + label:before {
  color: #fff;
  background-color: #0051cd;
  border-color: #fff;
}
.dcCheck label {
  display: inline-block;
}
/**
     * Styles a generic button
     * 
     * @mixin button
     *
     * @example {html}
     * <button>Button</button>
     * 
     * @preview
     * <button>Button</button>
     */
button,
.button {
  border: none;
  border-radius: 6px;
  min-width: 16px;
  height: 28px;
  padding: 0 5px;
  background-repeat: no-repeat;
  background-position: 1px 1px;
  font-size: 15px;
  -o-transition: background-color 0.25s;
  -moz-transition: background-color 0.25s;
  -webkit-transition: background-color 0.25s;
  -ms-transition: background-color 0.25s;
  transition: background-color 0.25s;
}
button > span,
.button > span {
  text-indent: 24px;
  background-repeat: no-repeat;
  background-position: left top;
  background-size: 24px 24px;
  min-width: 24px;
  height: 24px;
  display: inline-block;
  font-size: 12px;
  line-height: 22px;
  fill: #ccc;
}
button:hover,
.button:hover {
  border-color: #0077d8;
  background-color: #eee;
}
button:focus,
.button:focus {
  outline: none;
}
/**
     * Styles a submit button
     * 
     * @mixin submit
     *
     * @example {html}
     * <button type="submit">Submit</button>
     * <button class="submit">Submit</button>
     */
button[type=submit],
button.submit {
  background-color: #0051cd;
  color: #fff;
}
button[type=submit]:hover,
button.submit:hover {
  background-color: #1162de;
}
/**
     * Styles a cancel button
     * 
     * @mixin cancel
     *
     * @example {html}
     * <button type="reset">Reset</button>
     * <button class="cancel">Cancel</button>
     */
button[type=reset],
button.cancel {
  background-color: #d5d5d5;
  color: #333;
}
button[type=reset]:hover,
button.cancel:hover {
  background-color: #e6e6e6;
}
/**
     * Styles a flip box
     * Requires dresscode.js
     *
     * @mixin dcFlipBox
     * 
     * @example {html}
     * <dl class="dcFlipBox">
     *     <dt>My FlipBox</dt>
     *     <dd>Content ... </dd>
     * </dl>
     * 
     * @preview
     * <dl class="dcFlipBox">
     *     <dt>My FlipBox</dt>
     *     <dd>
     *         Lorem ipsum Culpa Excepteur eu non voluptate<br>
     *         nostrud mollit magna laborum amet id est enim<br>
     *         dolor adipisicing dolore.
     *     </dd>
     * </dl>
     */
.dcFlipBox dt:before {
  content: '›';
  color: #666;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  trasform-offset: 50% 50%;
  -o-transition: all 0.25s ease-in;
  -moz-transition: all 0.25s ease-in;
  -webkit-transition: all 0.25s ease-in;
  -ms-transition: all 0.25s ease-in;
  transition: all 0.25s ease-in;
  width: 20px;
  height: 20px;
  text-align: center;
  line-height: 20px;
}
.dcFlipBox dt {
  color: #666;
  font-size: 14px;
  font-weight: bold;
}
.dcFlipBox dt:hover {
  color: #0051cd;
}
.dcFlipBox dd {
  opacity: 0;
  overflow: hidden;
  -o-transition: all 0.35s ease-in;
  -moz-transition: all 0.35s ease-in;
  -webkit-transition: all 0.35s ease-in;
  -ms-transition: all 0.35s ease-in;
  transition: all 0.35s ease-in;
}
.dcFlipBox.active dd {
  opacity: 1;
}
.dcFlipBox.active dt:before {
  -o-transform: rotate(-270deg);
  -moz-transform: rotate(-270deg);
  -webkit-transform: rotate(-270deg);
  -ms-transform: rotate(-270deg);
  transform: rotate(-270deg);
}
.pageBody {
  margin: 0 auto;
  max-width: 1000px;
}
.docu .pageContent {
  margin-left: 250px;
}
.pageLeft {
  width: 250px;
  float: left;
  left: 0;
  top: 50px;
  padding: 10px;
  box-sizing: border-box;
}
.pageLeft.sticky {
  position: fixed;
  top: 47px;
  z-index: 9999;
}
.pageContent {
  padding: 10px;
  margin-bottom: 100px;
}
.pageLeft ~ .pageContent {
  margin-left: 250px;
}
.pageFooter {
  width: 100%;
  height: 30px;
  box-sizing: border-box;
  padding: 10px;
  font-size: 11px;
  padding-left: 250px;
  text-align: center;
  color: #666;
  margin-top: 30px;
}
.pageFooter a:link,
.pageFooter a:active,
.pageFooter a:visited {
  color: inherit;
}
.pageFooter a:hover {
  color: #0051cd;
}
.pageHeader {
  width: 100%;
  background-color: #232323;
  color: #fff;
  box-sizing: border-box;
  padding: 10px;
  z-index: 2;
}
.pageHeader .headerContent {
  max-width: 1000px;
  margin: 0 auto;
  position: relative;
}
.pageHeader .headerContent {
  height: 150px;
}
.pageHeader .name {
  font-size: 33px;
  display: inline-block;
}
.pageHeader .version {
  display: inline-block;
  font-size: 15px;
  margin-left: 10px;
}
.pageHeader a.logoLink:link,
.pageHeader a.logoLink:active,
.pageHeader a.logoLink:visited {
  color: #fff;
  text-decoration: none;
}
.pageHeader .mainNavi {
  position: absolute;
  right: 0;
  top: 0;
}
.pageHeader .mainNavi .links {
  display: inline-block;
}
.pageHeader .mainNavi a:link,
.pageHeader .mainNavi a:active,
.pageHeader .mainNavi a:visited {
  display: inline-block;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 5px;
  padding: 5px;
  text-decoration: none;
  color: #fff;
  margin-right: 5px;
}
.pageHeader .mainNavi a:hover {
  background-color: rgba(255, 255, 255, 0.4);
}
.pageHeader .headerLogo {
  float: left;
}
.pageHeader .headerLogo img {
  vertical-align: middle;
  margin-right: 10px;
}
.pageHeader .subtitle {
  font-size: 17px;
}
.pageNavi {
  background-color: #343434;
}
.pageNavi .naviContent {
  max-width: 1000px;
  margin: 0 auto;
  position: relative;
  padding: 10px;
  box-sizing: border-box;
}
.pageNavi a:link,
.pageNavi a:active,
.pageNavi a:visited {
  display: inline-block;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 5px;
  padding: 5px;
  text-decoration: none;
  color: #fff;
  margin-right: 5px;
}
.pageNavi a:hover {
  background-color: rgba(255, 255, 255, 0.4);
}
.pageNavi.sticky {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 47px;
  z-index: 9999;
}
.pageLeft .moduleBlock {
  background-color: #eee;
  border-radius: 5px;
  padding: 5px;
  margin-bottom: 10px;
}
.pageLeft .moduleBlock h1 {
  color: #555;
  font-size: 16px;
  font-weight: bold;
  margin: 0 0 10px 0;
  white-space: pre;
  text-overflow: ellipsis;
  overflow: hidden;
}
.pageLeft .moduleBlock h2 {
  color: #666;
  font-size: 12px;
  font-weight: bold;
  margin: 0;
  white-space: pre;
  text-overflow: ellipsis;
  overflow: hidden;
}
.pageLeft .moduleBlock a:link,
.pageLeft .moduleBlock a:active,
.pageLeft .moduleBlock a:visited {
  color: inherit;
  text-decoration: none;
}
.pageLeft .groupBlockItem {
  list-style-type: none;
  padding: 0;
}
.pageLeft .groupBlockItem li {
  list-style-type: none;
}
.pageLeft .groupBlockItem a:link,
.pageLeft .groupBlockItem a:active,
.pageLeft .groupBlockItem a:visited {
  color: #111;
  text-decoration: none;
}
.pageLeft .pageLinks .link {
  display: block;
}
.pageLeft .pageLinks a:link,
.pageLeft .pageLinks a:active,
.pageLeft .pageLinks a:visited {
  color: #111;
  text-decoration: none;
  display: inline-block;
  padding: 2px 5px;
}
.pageLeft .pageLinks a:link:before,
.pageLeft .pageLinks a:active:before,
.pageLeft .pageLinks a:visited:before {
  content: '›';
  margin-right: 5px;
}
.pageLeft .pageLinks a:hover {
  background-color: #0051cd;
  color: #fff;
  border-radius: 5px;
}
.pageLeft .subNavi {
  background-color: #eee;
  border-radius: 5px;
  padding: 5px;
  margin-bottom: 10px;
}
.pageLeft .subNavi .tree > .link:before {
  content: '› ';
}
.pageLeft .subNavi .twig {
  padding-left: 15px;
}
.pageLeft .subNavi .twig > .link:before {
  content: '› ';
}
.pageLeft .subNavi .twig > .link a:link,
.pageLeft .subNavi .twig > .link a:active,
.pageLeft .subNavi .twig > .link a:visited {
  color: #444;
  font-weight: normal;
}
.pageLeft .subNavi .twig > .link a:hover {
  color: #0051cd;
}
.pageLeft .subNavi a:link,
.pageLeft .subNavi a:active,
.pageLeft .subNavi a:visited {
  color: #444;
  text-decoration: none;
  font-size: 14px;
  font-weight: bolder;
  line-height: 20px;
}
.pageLeft .subNavi a:hover {
  color: #0051cd;
}
.pageContent h1 {
  font-size: 24px;
  font-weight: bold;
  color: #555555;
  margin-bottom: 10px;
}
.pageContent h1 .version {
  color: #333;
  font-size: 11px;
  display: inline-block;
  border-radius: 5px;
  background-color: #555555;
  color: #fff;
  padding: 2px 5px;
  position: relative;
  left: 10px;
  top: -10px;
}
.pageContent h2 {
  font-size: 20px;
  font-weight: bold;
  color: #555555;
  margin-bottom: 10px;
}
.pageContent h3 {
  font-size: 18px;
  font-weight: bold;
  color: #0051cd;
  margin-bottom: 10px;
}
.pageContent h4 {
  font-size: 15px;
  font-weight: bold;
  color: #232323;
  margin-bottom: 10px;
}
.pageContent h5 {
  font-size: 12px;
  font-weight: bold;
  color: #555555;
  margin-bottom: 5px;
}
.pageContent a:link,
.pageContent a:visited,
.pageContent a:active {
  color: #0051cd;
  text-decoration: none;
}
.pageContent a:hover {
  text-decoration: underline;
}
.pageContent .groupBlockItem,
.pageContent .itemBlockContent {
  margin-bottom: 30px;
}
.pageContent .codeBox {
  max-height: 200px;
  overflow: auto;
  background-color: #111;
  border-radius: 10px;
  color: #ddd;
  padding: 7px;
}
.pageContent .codeBlock {
  white-space: pre;
  font-family: monospace;
  background-color: #14171A;
  padding: 0;
}
.pageContent .description {
  font-size: 14px;
  margin-bottom: 20px;
}
.pageContent .description code {
  display: inline-block;
  border: 1px solid #c0c0c0;
  padding: 2px;
  color: #444;
}
.pageContent .noDescrition {
  color: #333;
}
.pageContent .preview {
  margin-bottom: 20px;
}
.pageContent .preview .cssColorPreview {
  width: 100px;
  height: 100px;
  border-radius: 5px;
  position: relative;
}
.pageContent .preview .cssColorName {
  position: absolute;
  left: 0;
  bottom: 36px;
  right: 0;
  text-align: center;
  display: block;
  background-color: rgba(255, 255, 255, 0.7);
  line-height: 26px;
  font-size: 18px;
  opacity: 0;
  -o-transition: opacity 0.5s;
  -moz-transition: opacity 0.5s;
  -webkit-transition: opacity 0.5s;
  -ms-transition: opacity 0.5s;
  transition: opacity 0.5s;
}
.pageContent .preview .cssColorName:hover {
  opacity: 1;
}
.pageContent .labels {
  margin-left: 10px;
  font-size: 13px;
}
.pageContent .labelConstructor {
  background-color: #967657;
}
.pageContent .labelPrivate {
  background-color: #b10000;
}
.pageContent .labelProtected {
  background-color: #ff7e00;
}
.pageContent .labelDeprecated {
  background-color: #b10024;
}
.pageContent .labelUnimplemented {
  background-color: #e1ff00;
  color: #000;
}
.pageContent .labelObject {
  background-color: #000;
  color: #fff;
}
.pageContent .labelFunction {
  background-color: #430069;
}
.pageContent .labelArray {
  background-color: #000;
  color: #fff;
}
.pageContent .labelNumber {
  background-color: #000;
  color: #fff;
}
.pageContent .labelAny {
  background-color: #000;
  color: #fff;
}
.pageContent .labelString {
  background-color: #000;
  color: #fff;
}
.pageContent .labelBoolean {
  background-color: #000;
  color: #fff;
}
.pageContent .labelColor {
  background-color: #000;
  color: #fff;
}
.pageContent .dataTypes {
  margin-left: 5px;
}
.pageContent .dataType {
  display: inline-block;
  border-radius: 5px;
  padding: 2px 5px;
  font-size: 12px;
  font-weight: normal;
  vertical-align: middle;
  background-color: #555555;
  background-color: #232323;
  color: #fff;
}
.pageContent .paramBlock {
  margin-bottom: 20px;
}
.pageContent .paramTable td {
  font-size: 13px;
}
.pageContent .returnValue h5 {
  display: inline-block;
}
.pageContent .returnValue p {
  display: inline-block;
  padding-left: 10px;
}
.pageContent .returnDatatype {
  font-weight: normal;
  color: #000;
}
.pageContent .registrar {
  color: #555555;
}
.pageContent .webLinks {
  margin-bottom: 10px;
}
