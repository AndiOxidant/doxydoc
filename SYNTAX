@module                 Indicates a module. A module is a collection of classes and methods.
@class                  Indicates a class. A class in Javascript is mostly an object with a constructor function
@method                 Indicates a class method
@property               Indicates a property of a class
@param                  Describes method parameter. Use this syntax:
                        @param {Type} name description

@return                 Describes a return value of a method
                        @return {Type} description




-- 

@event                  Describe an event that the class can fire
@submodule              Describes that this module is a submodule of other module
@namespace              Specifies a class' namespace
@extends                Specifies tha a class inherits from a other class
@constructor            Indicates a function as a class constructor
@type                   Specifies a type of a class property
@default                Specifies a default value of a class property
@private                Indicates that a class or method is private
@protected              Indicates that a class or method is protected
@public                 Indicates that a class or method is public
@requires               Defines dependencies of a module
@example                Indicates a example code of a class or method
@chainable              Indicates that a method returns this.
@deprecated             Indicates that a class or method is deprecated
                        @deprecated <message>
@since                  Describes the version since the module, class, property or method was added
@async                  Indicates that the method is async and requires an callback
@beta                   Indicates that a module, class or method is in beta state and might be changed in the future
@extension              Indicates that a module or class is an extension for an other module or class
@author                 Adds author informations
@copyright              Adds copyright informations
@licence                Adds licence informations

--

@callback               Describes a callback function
@constant               Indicates a constant
@fires                  Describes an event that a method may fires
@mixin                  Describes a mixin object
@see                    Specifies a link to an external documentation
@static                 Declares a class as a static class (singelton)
@summary                Defines a sorter description
@this                   Describes what does the this keyword refer to
@todo                   Describes tasts to finish the module, class or method
@tutorial               Adds a link to an external tutorial
@version                Set the version of a module

-- Inline tags

{@link someUrl|text}
{@link-external someUrl|text}